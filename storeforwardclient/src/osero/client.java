/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package osero;

import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.MouseListener;
import java.io.BufferedInputStream;
import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.ObjectInputStream;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.net.Socket;
import java.util.Arrays;
import javax.swing.JList;
import javax.swing.JOptionPane;

/**
 *
 * @author BLAIRMAN SUPER
 */
public class client extends javax.swing.JFrame {
    
	
        String  strNumber;
	String dirName="C:/CLIENT DIRECTORY";
	Socket clientSocket;
	InputStream inFromServer;
	OutputStream outToServer;
	BufferedInputStream bis;
	PrintWriter pw;
        FileOutputStream fileOut;
        DataOutputStream dataOut;
	String name, file, path;
	String hostAddr;
	int portNumber;
        int intNumber;
     
       
        
	int c=0;
	int size = 1024*1024;
	JList<String> filelist;
	String[] names = new String[10000];
	int len; // number of files on the server retrieved
    /**
     * Creates new form client
     */
    public client() {
        initComponents();       
        this.setLocationRelativeTo(null);
        
        
        try {
			clientSocket = new Socket("localhost",3333);
			inFromServer = clientSocket.getInputStream();
			pw = new PrintWriter(clientSocket.getOutputStream(), true);
			outToServer = clientSocket.getOutputStream();
			ObjectInputStream oin = new ObjectInputStream(inFromServer);
			String s = (String) oin.readObject();
			jTextArea1status.append(s);

			len = Integer.parseInt((String) oin.readObject());
			jTextArea1status.append(String.valueOf(len));

			String[] temp_names = new String[len];

			for(int i = 0; i < len; i++) {
				String filename = (String) oin.readObject();
				jTextArea1status.append("\n"+filename+"\n");
				names[i] = filename;
				temp_names[i] = filename;
			}

			// sort the array of strings that's going to get displayed in the scrollpane
			Arrays.sort(temp_names);

			jTextArea1status.append("You Can Download Any File in the Server Directory That You Want\n Thanks.\n");
			

			filelist = new JList<>(temp_names);
			//JScrollPane scroll = new JScrollPane(filelist);
			//scroll.setBounds(300, 200, 400, 200);

			//panel.add(scroll);
			//filelist.addMouseListener((MouseListener) this);

		} 
		catch (Exception exc) {
			jTextArea1status.append("Exception: \n" + exc.getMessage());
			jPanel1.revalidate();
			
		}
        
         
    }
     //alternative multiplication code
    private static String Multiply(String file, int intNumber)
    {
         int row;
        StringBuffer s = new StringBuffer(file.length() * intNumber);
        for(row=0; row<=intNumber; row++)
        {
            s.append(file);
        }
        return s.toString();
        
    }
       
  
      /*public void sendBytes(BufferedInputStream in , OutputStream out) throws Exception {
		int size = file.length();
		byte[] data = new byte[size];
		//int bytes = 0;
		int c = in.read(data, 0, data.length);
		out.write(data, 0, c);
		out.flush();
          
           
	}*/

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField1file = new javax.swing.JTextField();
        jTextField2time = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1status = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2progress = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea3result = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton1download = new javax.swing.JButton();
        jButton2logout = new javax.swing.JButton();
        jButtonclear = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(java.awt.Color.pink);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(java.awt.Color.blue);
        jLabel1.setText("SAN FILE SYSTEM CLIENT PANEL");

        jLabel2.setText("Enter File Name:");

        jLabel3.setText("Enter Download Times:");

        jTextField2time.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2timeActionPerformed(evt);
            }
        });

        jTextArea1status.setEditable(false);
        jTextArea1status.setColumns(20);
        jTextArea1status.setLineWrap(true);
        jTextArea1status.setRows(5);
        jTextArea1status.setToolTipText("");
        jScrollPane1.setViewportView(jTextArea1status);

        jTextArea2progress.setEditable(false);
        jTextArea2progress.setColumns(20);
        jTextArea2progress.setRows(5);
        jTextArea2progress.setToolTipText("");
        jTextArea2progress.setWrapStyleWord(true);
        jScrollPane2.setViewportView(jTextArea2progress);

        jTextArea3result.setEditable(false);
        jTextArea3result.setColumns(20);
        jTextArea3result.setRows(5);
        jScrollPane3.setViewportView(jTextArea3result);

        jLabel4.setText("Result:");

        jLabel5.setText("Download Progress:");

        jButton1download.setText("DOWNLOAD");
        jButton1download.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1downloadActionPerformed(evt);
            }
        });

        jButton2logout.setText("EXIT");
        jButton2logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2logoutActionPerformed(evt);
            }
        });

        jButtonclear.setText("NEW DOWNLOAD");
        jButtonclear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonclearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel5)
                        .addGap(31, 31, 31)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(48, 48, 48)
                                .addComponent(jLabel4)
                                .addGap(29, 29, 29)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(104, 104, 104)
                                .addComponent(jButtonclear)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton2logout)
                                .addGap(80, 80, 80))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(59, 59, 59)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2))
                                .addGap(122, 122, 122)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextField1file, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                                    .addComponent(jTextField2time))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1download)
                                .addGap(115, 115, 115)))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(280, 280, 280)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabel1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTextField1file, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(41, 41, 41)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField2time, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addComponent(jButton1download)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5)
                                .addGap(162, 162, 162))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(32, 32, 32)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButton2logout)
                                    .addComponent(jButtonclear))
                                .addGap(25, 25, 25))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(158, 158, 158))))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2logoutActionPerformed
       System.exit(0);
    }//GEN-LAST:event_jButton2logoutActionPerformed

     public void performDownload()
     {       
                         int dialogButton= JOptionPane.YES_NO_OPTION;
                         int dialogResult=JOptionPane.showConfirmDialog(null, "Download Completed. \n Do you want to perform another download?","SAN SYSTEM",dialogButton);
                                        
                                        if(dialogResult==JOptionPane.YES_OPTION)
                                        {
                                            //this.setVisible(true);
                                            clearText();
                                           
                                        }   
                                        else if(dialogResult==JOptionPane.NO_OPTION)
                                        {
                                           //do nothing 
                                        }
     }
     
     public void clearText()
     {
   jTextArea2progress.setText("");
   jTextArea3result.setText("");
   jTextField1file.setText("");
   jTextField2time.setText("");
   
  
   
   this.setVisible(false);
   client cl =new client();
   cl.show();
     }
    
    
    private void jButton1downloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1downloadActionPerformed
     if(jTextField1file.getText().equals("") || jTextField2time.getText().equals(""))
     {
         JOptionPane.showMessageDialog(null,"Please fill all the fields to continue");
     }
     else if(jTextField1file.getText().equals(""))
     {
         JOptionPane.showMessageDialog(null,"Please enter the name of the file to download");
         
     }
       else if(jTextField2time.getText().equals(""))
     {
         JOptionPane.showMessageDialog(null,"Please enter the number of times to download the file");
         
     }
     else
       {
       
         try {
                JOptionPane.showMessageDialog(null, "The file will be stored in:"+dirName+"\n");
             
                           BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
                          
                            intNumber=Integer.parseInt(jTextField2time.getText());
				File directory = new File(dirName);

				if (!directory.exists()) {
					directory.mkdir();
				}
				boolean complete = true;
				byte[] data = new byte[size];
				name = jTextField1file.getText();
				file = new String("*" + name+ "*");
				pw.println(file); //lets the server know which file is to be downloaded
                                
                              
                                        
                                jTextArea2progress.append("DOWNLOADING FILES FROM THE SERVER..................\n");
                                long start_time = System.currentTimeMillis()*intNumber;
				ObjectInputStream oin = new ObjectInputStream(inFromServer);                                 
			        String s = (String) oin.readObject();                                                                  

				if(s.equals("Success")) {   
                                    
                                        
                                       //long start_time=System.currentTimeMillis()*intNumber;
					
                                        
                                        
                            int row;
                            for (row = 0; row < intNumber; row++)
                              {                    /*int col;
                           for(col = 0; col < intNumber; col++)*/
                          //jTextArea2progress.append("\n" +file + "\n");  
                          jTextArea2progress.append("\n" +name + "\n");  
                          File f = new File(directory,name);                         
			  fileOut = new FileOutputStream(f);
			  dataOut = new DataOutputStream(fileOut);
                          
                              }
                                                              
					//empty file case
					while (complete) {
                                           
		                             //int c = 0;
                                            //while((c=inFromServer.read(data))>0)
                                             //{
                                            //out.write(data, 0, bytes);
		                             // out.flush();
                                             // }
						//c = inFromServer.read(data, 0, data.length);
                                                c=inFromServer.read(data);
						if (c < 0) {
						complete = false;
                                                       

						} else{
                                                 complete= true;
                                                    long EndTime=System.currentTimeMillis()*intNumber;
                                                       long ElapsedTime=(EndTime-start_time);
						       jTextArea3result.append("Download Completed Successfully \n");
			                               jTextArea3result.append ("ElapsedTime  is: "    + ElapsedTime + " ms" +"\nFile : " + name  +" \ndownloaded ( size: " + (c * intNumber)/1024 + " KB read) \n" );
							jTextArea3result.append("Completed \n");							
                                                        //displaying file size on the users device and flushing the buffer
							dataOut.write(data, 0, c);
							dataOut.flush();
                                                       
                                                        
                                                       
						}
                                                
					}
					fileOut.close();
                                        performDownload();
                                       
                                        
                                        
                                        
				}
				else {
					jTextArea2progress.append("Requested file not found on the server.\n");
                                        jTextArea3result.append("Result : Null \n");
                                        jPanel1.revalidate();
					
					
				}
			} 
			catch (Exception exc) {
				jTextArea2progress.append("Exception: " + exc.getMessage());
                                //JOptionPane.showMessageDialog(null, "Use the 'NEW DOWNLOAD' button to perform a new download. \n Thank you.");
                               JOptionPane.showMessageDialog(null, "Use the 'NEW DOWNLOAD' button to perform a new download. \n Thank you.","SAN SYSTEM", JOptionPane.INFORMATION_MESSAGE);
                                jPanel1.revalidate();
				
				
			}
       }
        
   
   
    }//GEN-LAST:event_jButton1downloadActionPerformed

    private void jTextField2timeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2timeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2timeActionPerformed

    private void jButtonclearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonclearActionPerformed
              clearText();
    }//GEN-LAST:event_jButtonclearActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new client().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1download;
    private javax.swing.JButton jButton2logout;
    private javax.swing.JButton jButtonclear;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    public javax.swing.JTextArea jTextArea1status;
    public javax.swing.JTextArea jTextArea2progress;
    public javax.swing.JTextArea jTextArea3result;
    private javax.swing.JTextField jTextField1file;
    private javax.swing.JTextField jTextField2time;
    // End of variables declaration//GEN-END:variables
}
